@model ChatThreeRole.Models.GroupModel;
@{
    ViewData["Title"] = "Home Page";
    var defaultPathImg = "http://127.0.0.1:11111/wwwroot/images/";
    var srcImageNull = "avatarEmpty.webp";
    var srcImageFromAccount = ViewBag.Avatar;
    var srcImage = "";
    if (String.IsNullOrEmpty(srcImageFromAccount)) srcImage = defaultPathImg + srcImageNull;
    else srcImage = defaultPathImg + srcImageFromAccount;
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <script src="http://127.0.0.1:11111/wwwroot/js/signalr/dist/browser/signalr.js"></script>
    <script src="http://127.0.0.1:11111/wwwroot/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="http://127.0.0.1:11111/wwwroot/lib/jquery/dist/jquery.js"></script>
    <script src="http://127.0.0.1:11111/wwwroot/lib/jquery/dist/jquery.min.js"></script>
    <script type="text/javascript" src="http://127.0.0.1:11111/wwwroot/js/AllFunction.js"></script>
    <script type="text/javascript" src="http://127.0.0.1:11111/wwwroot/js/MsgFunction.js"></script>
    <script type="text/javascript" src="http://127.0.0.1:11111/wwwroot/js/GroupFunction.js"></script>
    <script type="text/javascript" src="http://127.0.0.1:11111/wwwroot/js/AccountFunction.js"></script>
    <script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="http://127.0.0.1:11111/wwwroot/css/index.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<div id="NameLog">
    <div>
        <div>
            <button title="require send message to all client" onclick="Show('SendToAllClient')"
                style="border: none;">&#9742;</button>
            <div id="SendToAllClient" style="display: none;">
                <label>Message to all client:</label>
                <input type="text" placeholder="write smt... enter to invoke!!!" id="MessageToAllClient">
                <button onclick="Hide('SendToAllClient')">&#9746;</button>
            </div>
        </div>

    </div>
    <div class="dropdown" style="float:right;">
        <button id="profile" class="dropbtn"><img id="avatar"
                 src=@srcImage alt="Avatar">
        </button>
        <div class="dropdown-content">
            <div class="information">
                <img style="width: 50px;height:50px; margin-left:12px; border-radius:50%"
                     src=@srcImage alt="Avatar">
                <div style="margin-left: 10px;">
                    <b>@ViewBag.Name</b>
                    <p>@ViewBag.Email</p>
                </div>
            </div>
            <div style="display: flex;">
                <!-- Button trigger modal -->
                <button id="manageAccount" type="button" style="background-color: #f9f9f9;" data-toggle="modal" data-target="#exampleModal"><i class='far fa-address-card'></i>
                    Manage account
                </button>

                <!-- Modal -->
                <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog"
                    aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Manage Account</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                ...
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary">Save changes</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <a asp-action="Index" asp-controller="Manage" asp-route-email='@ViewBag.Email' id="ManageAccount">
                ManageAccount
            </a>
            <a asp-action="Logout" asp-controller="Home" asp-route-email='@ViewBag.Email' id="logout">
                Logout
            </a>
        </div>
    </div>
</div>
<div id="main-container">
    <div id="Left">
        <div id="titleOfLeft">
            <div>
                <h5>Chat </h5>
            </div>
            <div style="display: flex; justify-content:space-between;width:45%" >
                <div>
                    <button class="icon" id="more-action">
                        <i class="fas fa-ellipsis-h" style="margin-top: 7px;"></i>
                        <div id="select-box">
                            <p> Tạo mới group</p>
                            <p> Tin nhắn chờ</p>
                            <p> Tin nhắn lưu trữ</p>
                            <p> Tài khoản hạn chế</p>
                        </div>
                    </button>
                </div>
                <div>
                    <button class="icon" >
                        <i class="fab fa-youtube" style="margin-top: 7px;"></i>
                    </button>
                </div>
                <div>
                    <button class="icon" id = "SearchByEmail" onclick="ClickSearchUserByEmail('@ViewBag.Email')">
                        <i class="fas fa-external-link-alt" style="margin-top: 7px;"></i>
                    </button>
                </div>
            </div>
        </div>
        <div style="margin-top: 10px;margin-bottom:10px">
            <input id="searchConversation" placeholder="  Search on messenger" onchange="SearchUserAndGroup(event, listDivGroup)">
        </div>
        <div id="selectListGroup">

        </div>
    </div>
    <div id="ChatGroup">
        <div id="titleOfGroup" style="display: none;">
            <div style="display: flex; justify-content:space-between">
                <img class="image" id="avatarListChat" src="http://127.0.0.1:11111/wwwroot/images/avatarEmpty.webp" alt="Avatar" >
                <h5 id="groupNameTitle"> </h5>
            </div>
            <div style="margin-right: 10px;">
                <i class='fas fa-phone-alt' style="color: rgb(30, 144, 255); margin-right:10px;"></i>
                <i class='fas fa-video' style="color: rgb(30, 144, 255);"></i>
            </div>
        </div>
        <ul id="listMessageGroup" class="mainUL" style="padding-right: 10px; margin-left:0px;">
            <p> Hãy chọn một đoạn chat để bắt đầu</p>
        </ul>
        <div id="bottomOfGroup">
            <i class='fas fa-plus-circle' style="color: rgb(30, 144, 255); font-size:20px;"></i>
            <i class='fas fa-image' style="color: rgb(30, 144, 255); font-size:20px;"></i>
            <input type="text" id="messageToGroup" onchange="FunctionSend(event)">
            <input class="material-icons" style="color:dodgerblue; border-style:none; background-color: white;" type="submit" placeholder="Aa" value="&#xe163;" id="sendMessageToGroup"
                onclick="SendMessageToGroupFunc(constGroupName, '@ViewBag.Name', constGroupID, '@ViewBag.Email')">
        </div>
    </div>
    <div id="WrapperAccountOnline">
        <img src=@srcImage alt="Avatar"
            style="width: 60px; height:60px;border-radius:50%;margin-top:15px;">
        <h5 id="groupNameInfor"></h5>
        <div id="FixInformation">
            <button class="MenuInfor">
                <p onclick="showMenuItems(this)">
                    Tuỳ chỉnh đoạn chat <i class='fas fa-angle-down'
                                           style="margin-top:5px;"></i>
                </p>
                <div class="children">
                    <div class="child">Tùy chỉnh 1</div>
                    <div class="child">Tùy chỉnh 2</div>
                </div>
            </button>

            <button class="MenuInfor">
                <p onclick="showMenuItems(this)">
                    Tìm kiếm trong đoạn chat <i class='fas fa-angle-down'
                                           style="margin-top:5px;"></i>
                </p>
                <div class="children">
                    <div class="child">Tùy chỉnh 1</div>
                    <div class="child">Tùy chỉnh 2</div>
                </div>
            </button>
        </div>
    </div>
</div>

@section Scripts{
<script>
    var listDivGroup = new Array();
    var constGroupName;
    var constGroupID;
    var constEmail = "";
    var defaultImgSrc = "http://127.0.0.1:11111/wwwroot/images/avatarEmpty.webp";
    const connection = new signalR.HubConnectionBuilder().withUrl("/ChatHub").withAutomaticReconnect([0, 1000, 5000, null]).build();
    connection.start().then(() => {
        connection.invoke("SendToServer");
        connection.invoke("SendStatus", '@ViewBag.Name');
    });
    connection.on("NewGroupCreated", async function (groupName, hostConectionID){
        if (groupName.includes(":") && hostConectionID.trim() != connection.connectionId.trim()) {
            var tempEmail = groupName.split(":");
            var allGroupsName = await GetAllGroupNameThroughHub();
            console.log(allGroupsName);
            if ('@ViewBag.Email' == tempEmail[0] || '@ViewBag.Email' == tempEmail[1]){
                connection.invoke("AddToGroup", groupName, '@ViewBag.Email');
                allGroupsName = await GetAllGroupNameThroughHub();
                console.log(allGroupsName);

            }
        }
    });
    connection.on("RecvFromGroup", async function (groupname, message, groupID) {
        var arr = message.split(':');
        console.log(message);
        if ('@ViewBag.Email' != arr[0]) {
            var tempDiv = document.getElementById(groupID);
            var tempImg = "";
            var tempImgSrc = defaultImgSrc;
            if (tempDiv != null){
                if (tempDiv.getElementsByTagName("img") !== 0) {
                    tempImgSrc = defaultImgSrc;
                }
                else tempImgSrc = tempDiv.getElementsByTagName("img")[0].src;
                document.getElementById(groupID.toString()).remove();
            }
            console.log(tempImg);
            const timeNow = Date.now();
                var div = await CreateGroup(groupname, groupID, await GetImageOfGroupByID(groupID, '@ViewBag.Email'), message, timeNow, '@ViewBag.Email');

            var body = document.getElementById("selectListGroup");
            body.insertBefore(div, body.firstChild);
            if(groupIDSelected == groupID){
                var li = await DisplayMessageReceiver(message);
                document.getElementById("listMessageGroup").appendChild(li);
            }
        }
    });

    connection.on("NewGroup", function (message) {
        var o = new Option(message, message);
        /// jquerify the DOM object 'o' so we can use the html method
        $(o).html(message);
        $("#selectListGroup").append(o);
    });
    $("#AddNewGroup").click(function () {
        var group = $("#GroupName").val();
        if (group) {
            connection.invoke("SendNewGroupToMoniter", group);
            var o = new Option(group, group);
            o.className = "tooltip";
            /// jquerify the DOM object 'o' so we can use the html method
            $(o).html(item.groupName);
            $("#selectListGroup").append(o);
        }
    });
    $(document).ready(async function () {
        const selectBox = document.getElementById('select-box');
        const btn = document.getElementById('more-action');

        // Hiển thị hộp lựa chọn khi ấn nút
        btn.addEventListener('click', () => {
            selectBox.style.display = 'block';
        });

        // Ẩn hộp lựa chọn khi click ra ngoài
        document.addEventListener('click', (event) => {
            const isClickInside = selectBox.contains(event.target) || btn.contains(event.target);
            if (!isClickInside) {
                selectBox.style.display = 'none';
            }
        });

        var allGroup = await GetAllGroup();
        await allGroup.forEach(elem => {
            if (elem.groupName.includes(":")){
                let tempEmail = elem.groupName.split(":");
                    if ('@ViewBag.Email' == tempEmail[0] || '@ViewBag.Email' == tempEmail[1]) {
                        AddGroupToAccount(elem.id, '@ViewBag.Email')
                } 

            }
        });
        var arrGroup = await GetAllGroupRegistered('@ViewBag.Email');
        var body = document.getElementById("selectListGroup");
        var arrMsg = new Array();
        arrGroup.groups.forEach(elem =>{
            connection.invoke("AddToGroup", elem.groupName, '@ViewBag.Email');
        });
        arrMsg = await GetAllLastMessage(arrGroup.groups);
        arrMsg.sort(function (a, b) {
                return (a.dateOfMsg > b.dateOfMsg) ? -1 : ((a.dateOfMsg < b.dateOfMsg) ? 1 : 0);
            });
            for (const item of arrMsg) {
                if(item.messsage){
                    var div = await CreateGroup(await GetGroupNameByID(item.groupID), item.groupID, await GetImageOfGroupByID(item.groupID, '@ViewBag.Email'), item.messsage, item.dateOfMsg, '@ViewBag.Email');
                    listDivGroup.push(div);
                    body.append(div);
                }
                
            }
        if ('@ViewBag.Avatar') {
            document.getElementById("avatar").src = "http://127.0.0.1:11111/wwwroot/images/" + "@ViewBag.Avatar";
        }
    });

    async function SelectGroup(groupName, title, groupID, avatar = null) {
        if (document.getElementById("titleOfGroup").style.display  === 'none') {
            document.getElementById("titleOfGroup").style.display = 'flex'
        }
        if (document.getElementById("bottomOfGroup").style.display === 'none') {
            document.getElementById("bottomOfGroup").style.display = 'flex'
        }
            console.log(document.getElementById('search-area'));
            document.getElementById('search-area')?.remove();

        document.getElementById("WrapperAccountOnline").style.display = 'block'
        console.log(document.getElementById("WrapperAccountOnline").style.display)
        RemoveDivNullId();
        RemoveAllTempSelect();
        if(document.getElementById('inputSearchUserByEmail'))
            document.getElementById('inputSearchUserByEmail').style.display = 'none';
        $('#listMessageGroup').empty();
        console.log(groupName + groupID);
        constGroupID = groupID;
        constGroupName = groupName;
        //if(constGroupName.includes(":")){
                //connection.invoke("AddToGroup", groupName, constGroupName[0]);
                //connection.invoke("AddToGroup", groupName, constGroupName[1]);
        //}
        document.getElementById('avatarListChat').src = avatar;
        document.getElementById("groupNameTitle").innerHTML = title;
        GroupIDSelected(groupID);
        var arr = await GetMessageByGroupID(constGroupID);
        p = document.getElementById('listMessageGroup');
        p.onScroll = await handleScrollMessage(groupID, '@ViewBag.Email');
        SetPositionScrollBar('#listMessageGroup');
        document.getElementById("groupNameInfor").innerText = title;
        document.getElementById('titleOfGroup').style.display = 'flex';
        document.getElementById("bottomOfGroup").style.display === 'flex'
    }

    async function SelectTempGroup(nameAccount, id, src, email, myEmail) {
        console.log("my email: " + myEmail + "your email: " + email);
        document.getElementsByClassName("GroupOnline")
        RemoveDivNullId();
        var tempGroup;
        var div;
        var check = await CheckExistGroup(email.trim() + ":" + myEmail.trim()) != null? await CheckExistGroup(email.trim() + ":" + myEmail.trim()) : await CheckExistGroup(myEmail.trim() + ":" + email.trim());
        if(check != null ){
            tempGroup = check;
            var header = document.getElementById('titleOfGroup');
            document.getElementById("bottomOfGroup").style.display === 'flex'
            header.style.display = 'flex';
            if(document.getElementById(tempGroup.id))
                SelectGroup(tempGroup.groupName, nameAccount, tempGroup.id, src);
            else{
                div = await CreateGroup(tempGroup.groupName, tempGroup.id, await GetImgByEmail(email), "Start new conversation", null, myEmail);
                var selectList = document.getElementById('selectListGroup');
                selectList.insertBefore(div, selectList.firstChild);
                SelectGroup(tempGroup.groupName, nameAccount, tempGroup.id, src);
            }
        }
        else{
            console.log(2);
            div            = await CreateGroup(myEmail.trim() + ":" + email.trim(), null, await GetImgByEmail(email), "Start new conversation", null, myEmail );
            div.onclick    = null;
            tempGroup      = await PostGroup(myEmail.trim() + ":" + email.trim());
            constGroupName = tempGroup.groupName;
            connection.invoke("CreateGroup", constGroupName.trim());
            constGroupID   = tempGroup.id;
            var selectList = document.getElementById('selectListGroup');
            await AddGroupToAccount(tempGroup.id, myEmail);
            await AddGroupToAccount(tempGroup.id, email);
            SelectGroup(tempGroup.groupName, nameAccount, tempGroup.id, src);
            selectList.insertBefore(div, selectList.firstChild);
        }
        RemoveAllTempSelect();
    }

    function FunctionSend(event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (event.target.id == "messageToGroup"){
            SendMessageToGroupFunc(constGroupName, '@ViewBag.Name', constGroupID, '@ViewBag.Email');
        }
        if (event.target.id == "CreateGroup") {
            var input = document.getElementById("CreateGroup");
            if (input.value) {
                var settings  = {
                    "url"     : "https://localhost:7069/api/Group/",
                    "method"  : "POST",
                    "timeout" : 0,
                    "headers" : {
                        "Content-Type": "application/json"
                    },
                    "data": JSON.stringify({
                        "groupName"     : input.value,
                        "messageModels" : null
                    }),
                };
                $.ajax(settings).done(function (response) {
                    var body = document.getElementById("selectListGroup");
                    var div  = CreateGroup(response.groupName, response.id);
                    body.appendChild(div);
                    document.getElementById("CreateGroup").remove();
                });
            }
            else alert("Pls enter name of Group");
        }
    }
    $('#MessageToAllClient').keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            connection.invoke("InvokeSendALlClient", '@ViewBag.Name:' + $('#MessageToAllClient').val());
            alert("Require processing!!");
            document.getElementById("MessageToAllClient").value = "";
        }
    });
    $('#AddNewGroup').click(function () {
        var input                   = document.createElement('input');
        input.type                  = "text";
        input.style.width           = "80%";
        input.style.backgroundColor = "gray";
        input.id                    = "CreateGroup";
        input.style.color           = "white";
        input.style.textAlign       = "center";
        input.placeholder           = "Enter to create Group";
        input.setAttribute("onchange", "FunctionSend(event)")
        document.getElementById("selectListGroup").appendChild(input);
    });
    connection.on("TotalAccount", function (listAcc) {
        var arr = listAcc.split(',');
        arr.forEach(item => {
            if (item != "") {
                var i = document.createElement('i');
                i.className = "fa fa-circle";
                i.style.color = "green";
                document.getElementById(item).innerHTML += " ";
                document.getElementById(item).appendChild(i);
            }
        });
    });
    var groupIDSelected = 0;
    function GroupIDSelected(id){
        groupIDSelected = id;
    }

    const showMenuItems = (e) => {
        e.parentElement.getElementsByClassName('children')[0].style.display = "block";
    }
</script>
}
